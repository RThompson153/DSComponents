@using DSComponents.Enums
@using DSComponents.Input.Models

@if(Config != null)
{
	@switch(Config.Position)
	{
		case Position.InlineTop:
			<div class="center top inline">
				<div class="label-inline dsc-text @_bg">
					<span class="label">@Config.Label</span>
				</div>
			</div>
			break;
		case Position.InlineTopLeft:
			<div class="top left inline">
				<div class="label-inline dsc-text @_bg">
					<span class="label">@Config.Label</span>
				</div>
			</div>
			break;
		case Position.InlineTopRight:
			<div class="top right inline">
				<div class="label-inline dsc-text @_bg">
					<span class="label">@Config.Label</span>
				</div>
			</div>
			break;
		case Position.Top:
			<div class="top">
				<div class="dsc-text @_bg">
					<span class="label">@Config.Label</span>
				</div>
			</div>
			break;
		case Position.Left:
			<div class="left">
				<div class="dsc-text @_bg">
					<span class="label">@Config.Label</span>
				</div>
			</div>
			break;
		case Position.Right:
			<div class="right">
				<div class="dsc-text @_bg">
					<span class="label">@Config.Label</span>
				</div>
			</div>
			break;
	}
}

@code {
	[Parameter]
	public DSCLabelConfig Config { get; set; }
	[Parameter]
	public bool Disabled { get; set; }

	private string _bg;

	protected override void OnParametersSet()
	{
		_bg = (Disabled)
			? "disabled"
			: "dsc-background";

		base.OnParametersSet();
	}
}
